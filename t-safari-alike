#!/bin/sh

# Copyright 2017-2019 Raytheon BBN Technologies, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

SERVER=$1
SNI=$2

if [ -z ${SSL+x} ]; then
    echo "ERROR: SSL is not set"
    exit 1
fi

# Captured on 2018/09/28, on Safari 12.0 (13606.2.11)
# Still the same on 2019/01/02, on Safari 12.0.2 (13606.3.4.1.4)
# Still the same on 2019/03/01, on Safari 12.0.3 (13606.4.5.3.1)
# Still the same on 2019/04/26, on Safari 12.1 (13607.1.140.1.5)
# Still the same on 2019/05/31, on Safari 12.1.1 (13607.2.6.1.2)
# Still the same on 2019/07/30, on Safari 12.1.2 (13607.3.10)

CIPHERS="ECDHE-ECDSA-AES256-GCM-SHA384" # 0xc02c
CIPHERS="$CIPHERS:ECDHE-ECDSA-AES128-GCM-SHA256" # 0xc02b
CIPHERS="$CIPHERS:ECDHE-ECDSA-AES256-SHA384" # c024
CIPHERS="$CIPHERS:ECDHE-ECDSA-AES128-SHA256" # c023
CIPHERS="$CIPHERS:ECDHE-ECDSA-AES256-SHA" # c00a 
CIPHERS="$CIPHERS:ECDHE-ECDSA-AES128-SHA" # c009

CIPHERS="$CIPHERS:ECDHE-ECDSA-CHACHA20-POLY1305"	# cca9

CIPHERS="$CIPHERS:ECDHE-RSA-AES256-GCM-SHA384" # 0xc030
CIPHERS="$CIPHERS:ECDHE-RSA-AES128-GCM-SHA256" # 0xc02f
CIPHERS="$CIPHERS:ECDHE-RSA-AES256-SHA384" # c028
CIPHERS="$CIPHERS:ECDHE-RSA-AES128-SHA256" # c027
CIPHERS="$CIPHERS:ECDHE-RSA-AES256-SHA" # c014
CIPHERS="$CIPHERS:ECDHE-RSA-AES128-SHA" # c013

CIPHERS="$CIPHERS:ECDHE-RSA-CHACHA20-POLY1305"		# cca8

CIPHERS="$CIPHERS:AES256-GCM-SHA384" # 009d 
CIPHERS="$CIPHERS:AES128-GCM-SHA256" # 009c
CIPHERS="$CIPHERS:AES256-SHA256" # 003d
CIPHERS="$CIPHERS:AES128-SHA256" # 003c
CIPHERS="$CIPHERS:AES256-SHA" # 0035
CIPHERS="$CIPHERS:AES128-SHA" # 002f

TLS13="-no_tls1_3"

out=$(echo "" | "$SSL" s_client $TLS13 -cipher "$CIPHERS" \
	-servername "$SNI" -connect "$SERVER":443)

if [ $? -ne 0 ]; then
    # echo "${out}"
    echo $SERVER $SNI FAILED-NONE FAILED-NONE
else
    CHOSEN=$(echo "${out}" | grep ", Cipher is " | awk '{print $5}')
    case "$CHOSEN" in
	TLS_AES_128_GCM_SHA256|TLS_AES_256_GCM_SHA384|TLS_CHACHA20_POLY1305_SHA256)
	    PROTO=TLSv1.3
	    ;;
	*)
	    PROTO=$(echo "${out}" | grep "Protocol  : " | awk '{print $3}')
	    ;;
    esac

    echo $SERVER $SNI $CHOSEN $PROTO
fi
